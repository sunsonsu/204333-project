services:
  chat:
    build:
      context: ./chat
      dockerfile: Dockerfile
    env_file:
      - ./chat/.env
    depends_on:
      - database
      - redis

  client:
    build:
      context: ./client
      dockerfile: Dockerfile #recheck Dockerfile for production
    env_file:
      - ./client/.env
    depends_on:
      - database
      - redis

  coin:
    build:
      context: ./coin
      dockerfile: Dockerfile
    env_file:
      - ./coin/.env
    depends_on:
      - database
      - redis

  login:
    build:
      context: ./login
      dockerfile: Dockerfile
    env_file:
      - ./login/.env
    depends_on:
      - database
      - redis

  scheduler:
    build:
      context: ./scheduler
      dockerfile: Dockerfile #recheck Dockerfile for production
    env_file:
      - ./scheduler/.env
    depends_on:
      - database
      - redis

  database:
    image: postgres:16-alpine
    restart: always
    env_file:
      - .db.env
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    restart: always

  nginx:
    image: nginx:latest
    volumes:
      - ./conf.d:/etc/nginx/conf.d
    depends_on:
      - client
    ports:
      - 80:80

volumes:
  postgres-data:
